// Define subprojects section, this will include plugins, repositories and other high-level definitions for all subprojects
subprojects {
  // Define plugins
  apply plugin: 'java'
  apply plugin: 'maven' 

  // Define optional flags for compilation
  tasks.withType(Compile) { 
	  options.compilerArgs << "-Xlint:deprecation" 
  } 

  // Define group and version
  group = 'com.apress.springrecipes'
  version = '1.0-SNAPSHOT'
  
  description = """Spring Recipes Root"""

  sourceCompatibility = 1.6
  targetCompatibility = 1.6

  // Define repositorie to get dependencies
  repositories {
    mavenCentral()
    mavenRepo name: "ext-snapshots", url: "http://springframework.svn.sourceforge.net/svnroot/springframework/repos/repo-ext/"
    mavenRepo name: "maven1", url: "http://repo1.maven.org/maven2"
    // Public Spring artifacts
    mavenRepo name: "springsource-org-release", url: "http://repository.springsource.com/maven/bundles/release"
    mavenRepo name: "springsource-org-external", url: "http://repository.springsource.com/maven/bundles/external"
    mavenRepo name: "spring-release", url: "http://maven.springframework.org/release"
    mavenRepo name: "spring-milestone", url: "http://maven.springframework.org/milestone"
    mavenRepo name: "spring-snapshot", url: "http://maven.springframework.org/snapshot"
  }

  /* Define task to copy dependencies to into lib directory inside libs build dir 
    .jar/.war files are placed inside libs, so this comes in handy for command-line exection */
  task copyDependenciesToLibDir( type: Copy ) {
    into "$buildDir/libs/lib"
    from configurations.runtime
  }
 
  /* Provided is used to define compile-time dependencies, this allows such dependencies to not be copied into build files (.wars)
     this is awkard behavior, but it appears it's the wat its done in Grad
     Source: http://stackoverflow.com/questions/10405970/how-do-i-define-a-compile-time-only-classpath-in-gradle */
  configurations{
     provided
  }

  // Define 'provided' dependencies that will be loaded only for the compile classpath 
  dependencies{
    provided group:'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'
    provided group: 'commons-lang', name: 'commons-lang', version:'2.2'
    provided group: 'commons-io', name: 'commons-io', version:'1.3'
  }

  //Include provided for compilation
  sourceSets.main.compileClasspath += configurations.provided

} // End subprojects section 

// Define springintro project
project(':springintro') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:'3.2.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-expression', version:'3.2.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-beans', version:'3.2.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-context', version:'3.2.0.RELEASE'
    compile group: 'commons-logging', name: 'commons-logging', version:'1.1.1'
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     dependsOn copyDependenciesToLibDir
     manifest.attributes("Main-Class": "com.apress.springrecipes.hello.Main")
     project.ext["CP"] = new StringBuffer()
     configurations.runtime.allDependencies.each { dep ->
       project.ext["CP"].append(' ')
       project.ext["CP"].append("lib/${dep.getName()}-${dep.getVersion()}.jar")
     }
     project.ext["CP"].delete(0,1)
     manifest.attributes("Class-Path": project.ext["CP"].toString())
   }
} // End springintro project 

// Define springweb project
project(':springweb') {
   // Define usage of war plugin
   apply plugin: 'war'
   // Define defaulttasks, first clean, then build, then war
   defaultTasks 'clean','build','test','war'
   // Define dependencies
   dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:'3.2.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-expression', version:'3.2.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-webmvc', version:'3.2.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-beans', version:'3.2.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-context', version:'3.2.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-web', version:'3.2.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-aop', version:'3.2.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-orm', version:'3.2.0.RELEASE'
    compile group: 'commons-logging', name: 'commons-logging', version:'1.1.1'
    compile group: 'javax.validation', name: 'validation-api', version: '1.0.0.GA'
    compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: '4.1.9.Final'
    compile group: 'org.hibernate', name: 'hibernate-validator', version: '4.3.1.Final'
    compile group: 'com.h2database', name: 'h2', version: '1.3.162'
    // Add dependencies to add for runtime (these will be included in the WAR, in addition to those in compile group)
    runtime group: 'javax.servlet', name: 'jstl', version: '1.2'
    runtime group: 'org.codehaus.jackson',name: 'jackson-mapper-asl',version:'1.4.2'
    // Add dependencies for testing (these will only be used for the testing phase)
    testCompile group: 'junit', name: 'junit', version: '4.8.1'
    testCompile group: 'org.springframework', name: 'spring-test', version:'3.2.0.RELEASE'
    // YES, this strange jboss logger is needed by Hibernate testing (if not, testing fails)
    testCompile group: 'org.jboss.logging',name: 'jboss-logging',version:'3.1.2.GA'
   }
} // End springweb 


// Define springweb_withredis project
project(':springweb_withredis') {
   // Define usage of war plugin
   apply plugin: 'war'
   // Define defaulttasks, first clean, then build, then war
   defaultTasks 'clean','build','test','war'
   // Define dependencies
   dependencies {
    compile group: 'commons-lang', name: 'commons-lang', version:'2.2'
    compile group: 'commons-io', name: 'commons-io', version:'1.3'
    compile group: 'org.jboss.javaee', name: 'jboss-jca-api', version:'1.5.0.CR2'
    compile group: 'commons-collections', name: 'commons-collections', version:'3.2.1'
    compile group: 'commons-digester', name: 'commons-digester', version:'1.8'
    compile group: 'org.springframework', name: 'spring-core', version:'3.2.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-expression', version:'3.2.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-webmvc', version:'3.2.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-aspects', version:'3.2.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-beans', version:'3.2.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-context', version:'3.2.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-web', version:'3.2.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-context-support', version:'3.2.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-aop', version:'3.2.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-jms', version:'3.2.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-oxm', version:'3.2.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-orm', version:'3.2.0.RELEASE'
    compile group: 'geronimo-spec', name: 'geronimo-spec-jta', version:'1.0.1B-rc4'
    compile group: 'javax.servlet', name: 'jstl', version: '1.2'
    compile group: 'javax.transaction', name: 'jta', version:'1.1'
    compile group: 'org.springframework', name: 'spring-instrument', version:'3.2.0.RELEASE'
    compile group: 'commons-logging', name: 'commons-logging', version:'1.1.1'
    compile group: 'javax.validation', name: 'validation-api', version: '1.0.0.GA'
    compile group: 'org.cloudfoundry', name: 'cloudfoundry-runtime', version: '0.8.1'
    compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: '4.1.9.Final'
    compile group: 'org.hibernate', name: 'hibernate-validator', version: '4.3.1.Final'
    compile group: 'com.h2database', name: 'h2', version: '1.3.162'
    compile group: 'org.springframework.data', name: 'spring-data-redis', version: '1.0.0.RELEASE'
    compile group: 'junit', name: 'junit', version: '4.8.1'
    compile group: 'org.springframework', name: 'spring-test', version:'3.2.0.RELEASE'
    compile group: 'org.codehaus.jackson',name: 'jackson-mapper-asl',version:'1.4.2'
    // Add dependencies for testing
    testCompile group: 'junit', name: 'junit', version: '4.8.1'
    testCompile group: 'org.springframework', name: 'spring-test', version:'3.2.0.RELEASE'
    // YES, this strange jboss logger is needed by Hibernate testing (if not, testing fails)
    testCompile group: 'org.jboss.logging',name: 'jboss-logging',version:'3.1.2.GA'
   }
} // End springweb_withredis 